/*
 * Copyright (c) 2014, Oracle America, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 *  * Neither the name of Oracle nor the names of its contributors may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package jp.skypencil.java;

import org.openjdk.jmh.annotations.Benchmark;
import org.openjdk.jmh.annotations.Scope;
import org.openjdk.jmh.annotations.State;
import org.openjdk.jmh.infra.Blackhole;

import java.math.BigInteger;

public class RecordHashcodeBenchmark {
    @State(Scope.Thread)
    public static class Values {
        final RecordWith1IntDynamic recordWith1IntDynamic = new RecordWith1IntDynamic(1);
        final RecordWith1IntHardcode recordWith1IntHardcode = new RecordWith1IntHardcode(1);
        final RecordWith254IntDynamic recordWith254IntDynamic = new RecordWith254IntDynamic(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254IntHardcode recordWith254IntHardcode = new RecordWith254IntHardcode(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254FloatDynamic recordWith254FloatDynamic = new RecordWith254FloatDynamic(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254FloatHardcode recordWith254FloatHardcode = new RecordWith254FloatHardcode(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith127LongDynamic recordWith127LongDynamic = new RecordWith127LongDynamic(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith127LongHardcode recordWith127LongHardcode = new RecordWith127LongHardcode(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254CharHardcode recordWith254CharHardcode = new RecordWith254CharHardcode(
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1');
        final RecordWith254CharDynamic recordWith254CharDynamic = new RecordWith254CharDynamic(
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1',
                '1');
        final RecordWith254IntegerDynamic recordWith254IntegerDynamic = new RecordWith254IntegerDynamic(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254IntegerHardcode recordWith254IntegerHardcode = new RecordWith254IntegerHardcode(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);
        final RecordWith254IntHardcodeMethodAccess recordWith254IntHardcodeMethodAccess = new RecordWith254IntHardcodeMethodAccess(
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1);

        final RecordWith254BigIntegerDynamic recordWith254BigIntegerDynamic = new RecordWith254BigIntegerDynamic(
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10));

        final RecordWith254BigIntegerHardcode recordWith254BigIntegerHardcode = new RecordWith254BigIntegerHardcode(
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10),
                new BigInteger("1", 10));
        final RecordWith254StringDynamic recordWith254StringDynamic = new RecordWith254StringDynamic(new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"));
        final RecordWith254StringHardcode recordWith254StringHardcode = new RecordWith254StringHardcode(new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"),
                new String("1"));
    }

    @Benchmark
    public void run1intDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith1IntDynamic.hashCode());
    }

    @Benchmark
    public void run1intHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith1IntHardcode.hashCode());
    }

    @Benchmark
    public void run254intDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254IntDynamic.hashCode());
    }

    @Benchmark
    public void run254intHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254IntHardcode.hashCode());
    }

    @Benchmark
    public void run254charDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254CharDynamic.hashCode());
    }

    @Benchmark
    public void run254charHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254CharHardcode.hashCode());
    }

    @Benchmark
    public void run254IntegerDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254IntegerDynamic.hashCode());
    }

    @Benchmark
    public void run254IntegerHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254IntegerHardcode.hashCode());
    }

    @Benchmark
    public void run254intHardcodeMethodAccess(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254IntHardcodeMethodAccess.hashCode());
    }

    @Benchmark
    public void run254floatDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254FloatDynamic.hashCode());
    }

    @Benchmark
    public void run254floatHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254FloatHardcode.hashCode());
    }

    @Benchmark
    public void run127longDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith127LongDynamic.hashCode());
    }

    @Benchmark
    public void run127longHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith127LongHardcode.hashCode());
    }

    @Benchmark
    public void run254BigIntDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254BigIntegerDynamic.hashCode());
    }

    @Benchmark
    public void run254BigIntHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254BigIntegerHardcode.hashCode());
    }

    @Benchmark
    public void run254StringDynamic(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254StringDynamic.hashCode());
    }

    @Benchmark
    public void run254StringHardcode(Blackhole blackhole, Values values) {
        blackhole.consume(values.recordWith254StringHardcode.hashCode());
    }
}
